package wanghg.rhigosis;

// TERMINAL
terminal PACKAGE;
terminal SEMI;
terminal ID;
terminal DOT;
terminal NL;
terminal IMPORT;
terminal COMMA;
terminal LBRACE;
terminal RBRACE;
terminal OBJECT;
terminal CLASS;
terminal CASE;
terminal TRAIT;
terminal OVERRIDE;
terminal AT;
terminal UNDERSCORE;
terminal ABSTRACT;
terminal FINAL;
terminal SEALED;
terminal IMPLICIT;
terminal LAZY;
terminal PRIVATE;
terminal PROTECTED;
terminal HASH;
terminal TYPE;
terminal LPAREN;
terminal RPAREN;
terminal COLON;
terminal ASTERISK;
terminal SUPER;
terminal EXTENDS;
terminal LBRACK;
terminal RBRACK;
terminal THIS;
// TODO
terminal Exprs;
terminal PostfixExpr;
terminal BlockExpr;
terminal ClassQualifier;
terminal ImportSelector;
terminal ClassTemplate;
terminal TemplateBody;
terminal VariantTypeParam;
terminal ClassParams;
terminal ClassParamClause;
terminal TraitTemplate;
terminal Type;
// DONE
nonterminal CompilationUnit;
nonterminal TopStatSeq;
nonterminal QualId;
nonterminal TopStat;
nonterminal _AN_M_TmplDef;
nonterminal _M_TmplDef;
nonterminal Import;
nonterminal Packaging;
nonterminal PackageObject;
nonterminal TmplDef;
nonterminal Modifier;
nonterminal Annotation;
nonterminal ImportExpr;
nonterminal ObjectDef;
nonterminal ClassDef;
nonterminal _A_ClassParamClauses;
nonterminal TraitDef;
nonterminal LocalModifier;
nonterminal AccessModifier;
nonterminal SimpleType;
nonterminal ArgumentExprs;
nonterminal StableId;
nonterminal ImportSelectors;
nonterminal _ImportSelectors;
nonterminal ClassTemplateOpt;
nonterminal TypeParamClause;
nonterminal _TypeParamClause;
nonterminal ClassParamClauses;
nonterminal ConstrAnnotation;
nonterminal TraitTemplateOpt;
nonterminal AccessQualifier;
nonterminal TypeArgs;
nonterminal Path;
nonterminal Types;
// Precedence
precedence left DOT/*used in StableId*/;
// Rules

CompilationUnit ::=  TopStatSeq;
CompilationUnit ::=  PACKAGE QualId    SEMI CompilationUnit;

TopStatSeq        ::=  TopStat;
TopStatSeq        ::=  TopStatSeq SEMI TopStat;

QualId            ::=  ID;
QualId            ::=  QualId DOT ID;

TopStat           ::=  _AN_M_TmplDef;
TopStat           ::=  Import;
TopStat           ::=  Packaging;
TopStat           ::=  PackageObject;
TopStat           ::=  ;

_M_TmplDef          ::= TmplDef;
_M_TmplDef          ::= Modifier _M_TmplDef;

_AN_M_TmplDef       ::= _M_TmplDef;
_AN_M_TmplDef       ::= Annotation _AN_M_TmplDef;
_AN_M_TmplDef       ::= Annotation NL _AN_M_TmplDef;

Import            ::=  IMPORT ImportExpr;
Import            ::=  Import COMMA ImportExpr;

Packaging         ::=  PACKAGE QualId LBRACE TopStatSeq RBRACE;
Packaging         ::=  PACKAGE QualId NL LBRACE TopStatSeq RBRACE;

PackageObject     ::=  PACKAGE OBJECT ObjectDef;

TmplDef           ::=  CLASS ClassDef;
TmplDef           ::=  CASE CLASS ClassDef;
TmplDef           ::=  OBJECT ObjectDef;
TmplDef           ::=  CASE OBJECT ObjectDef;
TmplDef           ::=  TRAIT TraitDef;

Modifier          ::=  LocalModifier;
Modifier          ::=  AccessModifier;
Modifier          ::=  OVERRIDE;

Annotation        ::=  AT SimpleType;
Annotation        ::=  Annotation ArgumentExprs;

ImportExpr        ::=  StableId DOT ID;
ImportExpr        ::=  StableId DOT UNDERSCORE;
ImportExpr        ::=  StableId DOT ImportSelectors;

ObjectDef         ::=  ID ClassTemplateOpt;

ClassDef          ::=  ID _A_ClassParamClauses ClassTemplateOpt;
ClassDef          ::=  ID TypeParamClause _A_ClassParamClauses ClassTemplateOpt;

_A_ClassParamClauses    ::= ClassParamClauses;
_A_ClassParamClauses    ::= AccessModifier ClassParamClauses;
_A_ClassParamClauses    ::= ConstrAnnotation _A_ClassParamClauses;

TraitDef          ::=  ID TraitTemplateOpt;
TraitDef          ::=  ID TypeParamClause TraitTemplateOpt;

LocalModifier     ::=  ABSTRACT;
LocalModifier     ::=  FINAL;
LocalModifier     ::=  SEALED;
LocalModifier     ::=  IMPLICIT;
LocalModifier     ::=  LAZY;

AccessModifier    ::=  PRIVATE;
AccessModifier    ::=  PRIVATE AccessQualifier;
AccessModifier    ::=  PROTECTED;
AccessModifier    ::=  PROTECTED AccessQualifier;

SimpleType        ::=  SimpleType TypeArgs;
SimpleType        ::=  SimpleType HASH ID;
SimpleType        ::=  StableId;
SimpleType        ::=  Path DOT TYPE;
SimpleType        ::=  LPAREN Types RPAREN;

ArgumentExprs     ::=  LPAREN RPAREN;
ArgumentExprs     ::=  LPAREN Exprs RPAREN;
ArgumentExprs     ::=  LPAREN PostfixExpr COLON UNDERSCORE ASTERISK RPAREN;
ArgumentExprs     ::=  LPAREN Exprs COMMA PostfixExpr COLON UNDERSCORE ASTERISK RPAREN;
ArgumentExprs     ::=  BlockExpr;
ArgumentExprs     ::=  NL BlockExpr;

StableId          ::=  ID;
StableId          ::=  Path DOT ID;
StableId          ::=  SUPER DOT ID;
StableId          ::=  SUPER ClassQualifier DOT ID;
StableId          ::=  ID DOT SUPER DOT ID;
StableId          ::=  ID DOT SUPER ClassQualifier DOT ID;

ImportSelectors   ::=  LBRACE _ImportSelectors RBRACE;

_ImportSelectors    ::= ImportSelector;
_ImportSelectors    ::= UNDERSCORE;
_ImportSelectors    ::= ImportSelector COMMA _ImportSelectors;

ClassTemplateOpt  ::= EXTENDS ClassTemplate;
ClassTemplateOpt  ::= TemplateBody;
ClassTemplateOpt  ::= EXTENDS TemplateBody;

TypeParamClause   ::=  LBRACK _TypeParamClause RBRACK;

_TypeParamClause    ::= VariantTypeParam;
_TypeParamClause    ::= _TypeParamClause COMMA VariantTypeParam;

ClassParamClauses ::=  ;
ClassParamClauses ::=  LPAREN IMPLICIT ClassParams RPAREN;
ClassParamClauses ::=  NL LPAREN IMPLICIT ClassParams RPAREN;
ClassParamClauses ::=  ClassParamClause ClassParamClauses;

ConstrAnnotation  ::=  AT SimpleType ArgumentExprs;

TraitTemplateOpt  ::=  ;
TraitTemplateOpt  ::=  TemplateBody;
TraitTemplateOpt  ::=  EXTENDS TemplateBody;
TraitTemplateOpt  ::=  EXTENDS TraitTemplate;

AccessQualifier   ::=  LBRACK ID RBRACK;
AccessQualifier   ::=  LBRACK THIS RBRACK;

TypeArgs          ::=  LBRACK Types RBRACK;

Path              ::=  StableId;
Path              ::=  THIS;
Path              ::=  ID DOT THIS;

Types             ::=  Type;
Types             ::=  Types COMMA Type;






















